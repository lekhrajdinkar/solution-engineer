pipeline:
  name: build_to_nexus_pipeline
  identifier: build_pipeline
  projectIdentifier: mapsoutboundapi
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: org.githubrepoconnector
        build: <+input>
  stages:
    - stage:
        name: build and push to nexus
        identifier: build_and_push_to_docker_hub
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Docker
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: parse tag
                  identifier: parse_tag
                  spec:
                    shell: Sh
                    command: |-
                      GIT_BRANCH = <+pipeline.variables.GIT_BRANCH>

                      VERSION = $GIT_BRANCH.split('\/')[1]
                      VERSION_WITH_SEQ = "${VERSION}-"<+pipeline.sequenceId>
                    outputVariables:
                      - name: SEQ
                        type: String
                        value: <+pipeline.sequenceId>
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Build And Push Docker Hub
                  identifier: Build_And_Push_Docker_Hub
                  spec:
                    connectorRef: account.harnessImage
                    repo: <+pipeline.variables.DOCKER_HUB_REPO>
                    tags:
                      - spring-app
                    dockerfile: Dockerfile
                  when:
                    stageStatus: Success
          caching:
            enabled: false
            paths: []
          buildIntelligence:
            enabled: false
        when:
          pipelineStatus: Success
          condition: <+pipeline.variables.APP_ENV> == "dev2"
    - stage:
        name: promote_id_dev
        identifier: promote_id_dev
        description: ""
        type: Pipeline
        spec:
          org: default
          pipeline: Interface_Dev_Pipeline
          project: mapsoutboundapi
          inputs:
            identifier: Interface_Dev_Pipeline
            properties:
              ci:
                codebase:
                  build: <+input>
            variables:
              - name: GIT_BRANCH
                type: String
                value: <+input>
              - name: DOCKER_HUB_REPO
                type: String
                value: <+input>
        when:
          pipelineStatus: Success
          condition: <+pipeline.variables.APP_ENV> == "dev1"
  variables:
    - name: APP_NAME
      type: String
      description: ""
      required: false
      value: maps
    - name: APP_COMPONENT
      type: String
      description: ""
      required: false
      value: outbound
    - name: APP_ENV
      type: String
      description: ""
      required: false
      value: dev2
    - name: GIT_BRANCH
      type: String
      description: ""
      required: false
      value: <+input>
    - name: REGION
      type: String
      description: ""
      required: false
      value: us-west-2
    - name: DOCKER_HUB_REPO
      type: String
      description: ""
      required: false
      value: <+input>
